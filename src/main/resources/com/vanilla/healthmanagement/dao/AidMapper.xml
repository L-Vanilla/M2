<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vanilla.healthmanagement.dao.AidMapper">
  <resultMap id="BaseResultMap" type="com.vanilla.healthmanagement.pojo.Aid">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="older_id" jdbcType="INTEGER" property="olderId" />
    <result column="older_name" jdbcType="VARCHAR" property="olderName" />
    <result column="aid_date" jdbcType="DATE" property="aidDate" />
    <result column="aid_reason" jdbcType="VARCHAR" property="aidReason" />
    <result column="aid_remarks" jdbcType="VARCHAR" property="aidRemarks" />
    <result column="active" jdbcType="INTEGER" property="active" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
    <result column="check_state" jdbcType="INTEGER" property="checkState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, older_id, older_name, aid_date, aid_reason, aid_remarks, active, create_date, 
    rank, check_state
  </sql>
  <select id="selectByExample" parameterType="com.vanilla.healthmanagement.pojo.AidExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from aid
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from aid
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.vanilla.healthmanagement.pojo.AidExample">
    delete from aid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.vanilla.healthmanagement.pojo.Aid">
    insert into aid (id, older_id, older_name, 
      aid_date, aid_reason, aid_remarks, 
      active, create_date, rank, 
      check_state)
    values (#{id,jdbcType=INTEGER}, #{olderId,jdbcType=INTEGER}, #{olderName,jdbcType=VARCHAR}, 
      #{aidDate,jdbcType=DATE}, #{aidReason,jdbcType=VARCHAR}, #{aidRemarks,jdbcType=VARCHAR}, 
      #{active,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{rank,jdbcType=INTEGER}, 
      #{checkState,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.vanilla.healthmanagement.pojo.Aid">
    insert into aid
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="olderId != null">
        older_id,
      </if>
      <if test="olderName != null">
        older_name,
      </if>
      <if test="aidDate != null">
        aid_date,
      </if>
      <if test="aidReason != null">
        aid_reason,
      </if>
      <if test="aidRemarks != null">
        aid_remarks,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="checkState != null">
        check_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="olderId != null">
        #{olderId,jdbcType=INTEGER},
      </if>
      <if test="olderName != null">
        #{olderName,jdbcType=VARCHAR},
      </if>
      <if test="aidDate != null">
        #{aidDate,jdbcType=DATE},
      </if>
      <if test="aidReason != null">
        #{aidReason,jdbcType=VARCHAR},
      </if>
      <if test="aidRemarks != null">
        #{aidRemarks,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        #{active,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="checkState != null">
        #{checkState,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.vanilla.healthmanagement.pojo.AidExample" resultType="java.lang.Long">
    select count(*) from aid
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aid
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.olderId != null">
        older_id = #{record.olderId,jdbcType=INTEGER},
      </if>
      <if test="record.olderName != null">
        older_name = #{record.olderName,jdbcType=VARCHAR},
      </if>
      <if test="record.aidDate != null">
        aid_date = #{record.aidDate,jdbcType=DATE},
      </if>
      <if test="record.aidReason != null">
        aid_reason = #{record.aidReason,jdbcType=VARCHAR},
      </if>
      <if test="record.aidRemarks != null">
        aid_remarks = #{record.aidRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.checkState != null">
        check_state = #{record.checkState,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aid
    set id = #{record.id,jdbcType=INTEGER},
      older_id = #{record.olderId,jdbcType=INTEGER},
      older_name = #{record.olderName,jdbcType=VARCHAR},
      aid_date = #{record.aidDate,jdbcType=DATE},
      aid_reason = #{record.aidReason,jdbcType=VARCHAR},
      aid_remarks = #{record.aidRemarks,jdbcType=VARCHAR},
      active = #{record.active,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      rank = #{record.rank,jdbcType=INTEGER},
      check_state = #{record.checkState,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.vanilla.healthmanagement.pojo.Aid">
    update aid
    <set>
      <if test="olderId != null">
        older_id = #{olderId,jdbcType=INTEGER},
      </if>
      <if test="olderName != null">
        older_name = #{olderName,jdbcType=VARCHAR},
      </if>
      <if test="aidDate != null">
        aid_date = #{aidDate,jdbcType=DATE},
      </if>
      <if test="aidReason != null">
        aid_reason = #{aidReason,jdbcType=VARCHAR},
      </if>
      <if test="aidRemarks != null">
        aid_remarks = #{aidRemarks,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="rank != null">
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="checkState != null">
        check_state = #{checkState,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vanilla.healthmanagement.pojo.Aid">
    update aid
    set older_id = #{olderId,jdbcType=INTEGER},
      older_name = #{olderName,jdbcType=VARCHAR},
      aid_date = #{aidDate,jdbcType=DATE},
      aid_reason = #{aidReason,jdbcType=VARCHAR},
      aid_remarks = #{aidRemarks,jdbcType=VARCHAR},
      active = #{active,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      rank = #{rank,jdbcType=INTEGER},
      check_state = #{checkState,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>